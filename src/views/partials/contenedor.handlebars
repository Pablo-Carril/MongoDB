<div class="container-fluid ">
  <div class="row" style="flex-wrap: nowrap;">

    <div class="col-2" style="min-width: 240px;"> <!-- este maneja el ancho del formulario. y también ancho mínimo-->
      {{> formulario}} <!--todos los que se llamen de este modo deben encontrarse en partials-->
      <!-- y para actualizarce debe actualizarce toda la página      text-danger  alert alert-primary   -->
    </div>

    <div class="col-9" style="min-width: 200px;"> <!-- CUIDADO: afecta a toda la tabla también -->

      <div class="container">
        <div class="row">

          <!-- style="border: 1px solid #86b7fe; border-radius: 8px; box-shadow: 0px 0px 2px 2px #86b7fe" -->
          <div class="col-2">
            <h5 class="mt-2 p-2">
              {{resultadosDe}}
              <span class="ms-2 fw-bold " style="font-size: 1.1rem; color: {{colorOpcion this.equipo}};"> {{busqueda}}
              </span>
            </h5>
          </div>

          <div class="col-md-4 mt-2">
            <div class="form-group">
              <label for="equiSel">Filtrar por:</label>
              <select class="custom-select form-control fw-bold " name='equi' id="equiSel"
                style="color: {{colorOpcion this.equipo}}; display: inline-block;" title="Seleccione el equipo">
                <option value="">Todos</option>
                <option value="validador" {{isSelected equipo 'validador' }}>Validador</option>
                <option value="teclado" {{isSelected equipo 'teclado' selected }}>Teclado</option>
                <option value="mountinKit" {{isSelected equipo 'mountinKit' }}>MountinKit</option>
                <option value="concentrador" {{isSelected equipo 'concentrador' }}>Concentrador</option>
                <option value="otros" {{isSelected equipo 'otros' }}>Otros</option>
              </select>
            </div>
          </div>

          <div class="col-md-4 mt-2">
            <label for="equiSel">Buscar Serie:</label>
            <input type="number" name="serieHisto" id="serieHisto" class="form-control fw-bold" min="1" max="999999999"
              title="Ingrese serie" style="color: {{colorOpcion this.equipo}};">
          </div>

        </div>
      </div>


      {{#if mostrarHistorial}}
      {{> historial}}
      {{/if}}

      {{#if mostrarUltimos}}
      {{> ultimos}}
      {{/if}}

      {{#if ocultar}}
      <h4>Bienvenido</h4>
      <p>Para grabar un equipo llene el formulario de la derecha, o en el</p>
      <p>menú superior eliga la consulta a realizar. luego podrá</p>
      <p>filtrar la consulta por tipo de equipo en "Flitrar por".</p>
      <p>Para buscar un número de serie ingreselo en "Buscar Serie".</p>
      {{/if}}


    </div>

    <!--  <div id="nota"></div> -->

  </div>
</div>

<script>
  //SELECT para FILTRO por EQUIPO:
  const equiSel = document.getElementById("equiSel")
  equiSel.addEventListener('change', () => {
    const spinnerContainer = document.querySelector('.spinner-container');
    spinnerContainer.classList.remove('escondido') // Muestra el Spinner. cuando se actualize la página se oculta solo.

    equipoElegido = equiSel.value
    //ENVIAMOS el equipoElegido al servidor:
    const dato = JSON.stringify({ 'equipo': equipoElegido })
    console.log(dato)
    fetch('/equipoElegido', {   // + equipoElegido, { no hace falta mandarlo por la ruta. va por el body.
      method: 'POST',             //PORQUE si la ruta está mal el server me devuelve status 200 ????????
      headers: {
        'Content-Type': 'application/json',   //sin esto no anda.
      },
      body: dato,
    })
      .then(response => {    //si el fetch fue correcto el servidor devuelve una respuesta (que no tiene que ver con el catch)
        if (response.ok) {   //el ok es parte de una Api Rest, así como el body.
          return response.json()   //esto TIENE QUE ESTAR para poder recibir luego el msg. lo pasa a json para poder ser leído por el siguiente .then{msg}
        }
        else {
          throw new Error(`Error de red - ${response.status}`); //esto se hace para que lo capture el .catch siguiente. lanzamos un error adrede.
        }
      })
      .then(msg => {         //ahora llega bien el equipo elegido!!
        console.log('Cambio a equipo: ', msg)
        if (!'{{ocultar}}') {
          location.reload(); // Actualizamos la página para que tome el equipo elegido SOLO si NO está oculto los botones, o sea cuando NO estoy Editando.
        }
      })  //debería chequear otra cosa junto con ocultar, para no depender de esa variable, que tiene otra función.
      // YA CREÉ UN NUEVO FORMULARIO de EDICION así que ocultar ya no hace falta
      .catch((error) => {       //si la ruta está mal devuelve el error por aquí aunque el status sea 200. sólo maneja errores de red.
        console.log('Ocurrió un error: ', error)
      })
  })
</script>