<div class="col-11 mx-auto border p-4" >

  <h4>Notas:</h4>

  <!-- Formulario para agregar una nueva nota -->
  <form action="/notas" method="POST" class="me-3">
    <textarea name="contenido" rows="4" cols="50" placeholder="Escribe tu nota aqu√≠..." required></textarea><br>
    <button type="submit" class="btn btn-primary ms-2 text-white">‚úî</button>
  </form>

  <!-- Lista de notas -->
  {{#each notas}}
  <div class="contenedor-notas me-3">
    <div class="nota">
      <p>{{this.contenido}}</p>
      <small>{{this.fecha}}</small>
    </div>
    <div class="botones">
      <button class="btn btn-primary ms-2 text-white hover-btn edit-btn" data-id="{{this._id}}">üìù</button>
      <!-- el id de la nota lo pasamos como atributo. buena t√©cnica!! -->
      <span class="tooltip">Editar</span>
      <button class="btn btn-warning ms-2 text-white delete-btn" data-id="{{this._id}}">üóë</button>
    </div>
    <!-- usamos una clase nuestra (delete-btn) para escuchar todos los botones de todas las notas -->
  </div>
  {{/each}}

</div>

<style>
  .contenedor-notas {
    display: flex;
    align-items: center;
  }

  .nota {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin-top: 10px;
    width: 100%;
    background-color: rgb(209, 247, 251); // rgb(127, 242, 255);

  }

  .nota p {
    white-space: pre-wrap;
    /* Preservar saltos de l√≠nea y espacios */
    word-wrap: break-word;
    /* Para romper palabras largas */
  }

  .botones {
    display: flex;
    flex-direction: column;
    gap:0.5rem;
    justify-content: space-between;
   margin-top: 10px;
  }

  form {
    display: flex;
    justify-content: space-between;
    align-items: start;

  }

  textarea {
    border-radius: 5px;
    padding: 0.5rem;
    width: 100%;
  }

  .btn {
    padding: 6px;
   /* max-height: 3rem;*/
  }

  .hover-btn {
    position: relative;
    cursor: pointer;

  }

  .tooltip {
    display: none;
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 5px;
    border-radius: 3px;
    white-space: nowrap;
    z-index: 1;
    bottom: 125%;
    /* Colocar por encima del bot√≥n */
    left: 50%;
  }

 /* .hover-btn:hover+.tooltip {
    display: block;
    background-color: #ffc;
  } */

</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {

    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', async (e) => {
        const id = e.target.getAttribute('data-id');  //el id se lo pasamos como atributo al momento de renderizar las notas
        if (confirm('¬øEst√°s seguro de que deseas eliminar esta nota?')) {
          try {
            const response = await fetch(`/notas/${id}`, {
              method: 'DELETE'
            });
            if (response.ok) {
              // Eliminar la nota del DOM
              e.target.closest('.contenedor-notas').remove();  //padre o ancestro m√°s cercano
            } else {
              alert('Error al eliminar la nota');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error al eliminar la nota');
          }
        }
      })
    })

    document.querySelectorAll('.edit-btn').forEach(button => {
      button.addEventListener('click', async (e) => {
        const id = e.target.getAttribute('data-id'); // Obtener el ID de la nota
        const contenedorNota = e.target.closest('.contenedor-notas');
        const nota = contenedorNota.querySelector(`.nota[data-id="${id}"]`);
        const contenido = nota.querySelector('p').textContent;

        // Mostrar el formulario de edici√≥n
        const formularioEdicion = document.createElement('form');
        formularioEdicion.innerHTML = `
        <textarea name="contenido" rows="4" cols="50">${contenido}</textarea><br>
        <button type="submit" class="btn btn-primary">Guardar</button>
      `;

        // Reemplazar la nota con el formulario de edici√≥n
        nota.innerHTML = '';
        nota.appendChild(formularioEdicion);

        // Manejar el env√≠o del formulario de edici√≥n
        formularioEdicion.addEventListener('submit', async (event) => {
          event.preventDefault();
          const nuevoContenido = formularioEdicion.querySelector('textarea').value;
          try {
            const response = await fetch(`/notas/${id}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ contenido: nuevoContenido })
            });
            if (response.ok) {
              // Actualizar la vista con el contenido editado
              nota.innerHTML = `
              <p>${nuevoContenido}</p>
              <small>Fecha de edici√≥n: ${new Date().toLocaleString()}</small>
            `;
            } else {
              alert('Error al editar la nota');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error al editar la nota');
          }
        });
      });
    });

  })


</script>